{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ls_az_blob_azuredirectorysa",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				},
				{
					"linkedService": {
						"referenceName": "ls_az_blob_azuredirectorysa",
						"type": "LinkedServiceReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "ls_az_blob_azuredirectorysa",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "select1"
				},
				{
					"name": "union1"
				},
				{
					"name": "derivedColumn2"
				}
			],
			"scriptLines": [
				"parameters{",
				"     c as integer",
				"}",
				"source(output(",
				"          name as string,",
				"          age as integer",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     container: 'sourceca',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     wildcardPaths:['inc/?.csv']) ~> source1",
				"source(output(",
				"          id as long,",
				"          name as string,",
				"          age as integer",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     container: 'sourceca',",
				"     folderPath: 'inc',",
				"     fileName: 'res.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> source2",
				"source1 derive(col1 = $c) ~> derivedColumn1",
				"derivedColumn1 keyGenerate(output(skey as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"derivedColumn2 select(mapColumn(",
				"          skey = skey2,",
				"          name,",
				"          age",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"source2, select1 union(byName: false)~> union1",
				"surrogateKey1 derive(skey2 = add(skey,col1)) ~> derivedColumn2",
				"union1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     container: 'sourceca',",
				"     folderPath: 'inc',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     partitionFileNames:['ref.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}